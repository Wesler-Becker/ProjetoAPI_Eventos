"use strict";
var ByteCountHashing_1 = require('./ByteCountHashing');
// Make sure TypeScript allows us to use the constructor as a hashFunction:
var byteCountHashFunction = ByteCountHashing_1.default;
var byteCountHashing = byteCountHashFunction.newHashing();
function assertEquals(a, b, message) {
    a = JSON.stringify(a);
    b = JSON.stringify(b);
    if (a != b) {
        throw new Error(a + " != " + b + (message ? "; " + message : ""));
    }
}
var emptyDigest = byteCountHashing.digest();
var expectedEmptyDigest = new Uint8Array(8);
assertEquals(expectedEmptyDigest, emptyDigest);
byteCountHashing.update(new Uint8Array(5));
var expectedFiveDigest = new Uint8Array(8);
expectedFiveDigest[7] = 5;
assertEquals(expectedFiveDigest, byteCountHashing.digest());
byteCountHashing.reset();
assertEquals(expectedEmptyDigest, byteCountHashing.digest());
byteCountHashing.update(new Uint8Array(1 * 65536 + 2 * 256 + 3));
var expectedOneTwoThreeDigest = new Uint8Array(8);
expectedOneTwoThreeDigest[7] = 3;
expectedOneTwoThreeDigest[6] = 2;
expectedOneTwoThreeDigest[5] = 1;
assertEquals(expectedOneTwoThreeDigest, byteCountHashing.digest());
//# sourceMappingURL=ByteCountHashingTest.js.map