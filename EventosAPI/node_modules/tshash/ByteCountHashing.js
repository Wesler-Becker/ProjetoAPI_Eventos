"use strict";
/**
 * A really terrible hash function.
 * Here so we can make sure the build process works, mostly.
 */
var ByteCountHashing = (function () {
    function ByteCountHashing() {
        this.byteCount = 0;
    }
    ByteCountHashing.prototype.reset = function () { this.byteCount = 0; };
    ByteCountHashing.prototype.update = function (data) { this.byteCount += data.length; };
    ByteCountHashing.prototype.digest = function () {
        var byteCount = this.byteCount;
        if (byteCount < 0)
            throw new Error("Somehow byteCount < 0: " + byteCount);
        if (byteCount > 4294967295)
            throw new Error("ByteCount too big (> 2**32-1): " + byteCount);
        var digest = new Uint8Array(8);
        digest[7] = (byteCount >> 0) & 0xFF;
        digest[6] = (byteCount >> 8) & 0xFF;
        digest[5] = (byteCount >> 16) & 0xFF;
        digest[4] = (byteCount >> 24) & 0xFF;
        //digest[3] = (byteCount >> 32) & 0xFF;
        //digest[2] = (byteCount >> 40) & 0xFF;
        return digest;
    };
    ByteCountHashing.newHashing = function () { return new this; };
    return ByteCountHashing;
}());
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = ByteCountHashing;
//# sourceMappingURL=ByteCountHashing.js.map